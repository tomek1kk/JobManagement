@model JobManagement.Models.Position
@{
    ViewData["Title"] = "New";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>New</h2>
@if (User.Identity.IsAuthenticated)
{
@using (Html.BeginForm("AddPosition", "Position", FormMethod.Post))
{
    <div class="form-group">
        @Html.LabelFor(p => p.PositionName)
        @Html.TextBoxFor(p => p.PositionName, new { @class = "form-control" })
        @Html.ValidationMessageFor(p => p.PositionName, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(p => p.Salary)
        @Html.TextBoxFor(p => p.Salary, new { @class = "form-control" })
        @Html.ValidationMessageFor(p => p.Salary, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(p => p.Location)
        @Html.TextBoxFor(p => p.Location, new { @class = "form-control" })
        @Html.ValidationMessageFor(p => p.Location, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(p => p.Description)
        @Html.TextBoxFor(p => p.Description, new { @class = "form-control" })
        @Html.ValidationMessageFor(p => p.Description, "", new { @class = "text-danger" })
    </div>

    <button type="submit">Submit</button>

    @Html.HiddenFor(p => p.PositionID)
    @Html.HiddenFor(p => p.AddTime)
}
}
else
{
    <p>nie jestes zalogowany!</p>
}
