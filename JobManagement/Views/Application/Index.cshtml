
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>All applications</h2>
<br/>

<table id="main-table" class="table table-striped table-bordered table-sm">
    <thead>
        <tr>
            <th scope="col">Id</th>
            <th scope="col">First Name</th>
            <th scope="col">Last Name</th>
            <th scope="col" contenteditable="true">Position</th>
            <th scope="col"></th>
        </tr>
    </thead>
    <tbody id="table-body"></tbody>
</table>


@section Scripts {

    <script>
        var page = 1;
        $(document).ready(function () {
            loadApplications(1);
        });
        function loadApplications(page) {
            $.ajax({
                url: "api/Job/GetAll",
                type: "GET",
                success: function (response) {
                    document.getElementById("table-body").innerHTML = '';
                    $.each(response.jobApplications, function (i, application) {
                        let tableRow = document.createElement("tr");

                        let th = document.createElement("th");
                        th.scope = "row";
                        th.textContent = application.id;

                        let columns = getTableColumns(application);

                        let trButtons = document.createElement("td");
                        trButtons.classList.add("tr-buttons");

                        createEditDeleteButtons(columns, trButtons, application);

                        tableRow.appendChild(th);
                        columns.forEach(c => tableRow.appendChild(c));
                        tableRow.appendChild(trButtons);

                        document.getElementById("table-body").appendChild(tableRow);
                    });

                },
                error: function () {
                    alert("load applications error");
                }
            });
        }
        function deleteRow(id) {
            $.ajax({
                url: "api/Job/Delete/" + id,
                type: "DELETE",
                success: function () {
                    console.log("trying to delete item with id :" + id);
                    loadApplications(0);
                },
                error: function () {
                    alert("delete error");
                }
            });
        }



        function saveApplication(application) {
            $.ajax({
                url: "api/Job/Update",
                type: "PUT",
                data: JSON.stringify(application),
                success: function () {
                    console.log("updated!");
                },
                error: function () {
                    alert("update error");
                },
                contentType: 'application/json'
            })            
        }

        function createEditDeleteButtons(columns, trButtons, application) {

            columns.forEach(c => c.contentEditable = false);
            removeAllChilds(trButtons);

            let deleteButton = document.createElement("button");
            deleteButton.textContent = 'Delete';
            deleteButton.classList.add("btn", "btn-danger");
            deleteButton.addEventListener("click", () => deleteRow(application.id));

            let editButton = document.createElement("button");
            editButton.textContent = 'Edit';
            editButton.classList.add("btn", "btn-info");
            editButton.addEventListener("click", () => createSaveButton(columns, trButtons, application));

            trButtons.appendChild(editButton);
            trButtons.appendChild(deleteButton);
        }

        function createSaveButton(columns, trButtons, application) {
            columns.forEach(c => c.contentEditable = true);
            removeAllChilds(trButtons);

            let saveButton = document.createElement("button");
            saveButton.textContent = 'Save';
            saveButton.classList.add("btn", "btn-success");
            saveButton.addEventListener("click", function () {
                application.firstName = columns[0].textContent;
                application.lastName = columns[1].textContent;
                application.position = columns[2].textContent;
                saveApplication(application);
                createEditDeleteButtons(columns, trButtons, application);
            });

            trButtons.appendChild(saveButton);
        }

        function getTableColumns(application) {
            let trFirstName = document.createElement("td");
            trFirstName.textContent = application.firstName;
            let trLastName = document.createElement("td");
            trLastName.textContent = application.lastName;
            let trPosition = document.createElement("td");
            trPosition.textContent = application.position;

            return [trFirstName, trLastName, trPosition];
        }

        function removeAllChilds(node) {
            while (node.firstChild)
                node.removeChild(node.firstChild);
        }
    </script>
}

    <style>

    .btn-danger {
        padding: 5px;
        font-size: 11px;
    }

    .btn-info {
        padding: 5px;
        margin-right: 5px;
        padding-right: 10px;
        padding-left: 10px;
        font-size: 11px;
    }

    .btn-success {
        padding: 5px;
        font-size: 11px;
        padding-right: 10px;
        padding-left: 10px;
    }

    .tr-buttons {
        width: 15%;
    }

   </style>