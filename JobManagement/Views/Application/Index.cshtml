
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div>
    <div id="header-div">
        <h2>All applications</h2>
    </div>
    <div id="button-div">
        @Html.ActionLink("New application", "New", "Application", null, new { @class = "btn btn-success add-button" })
    </div>
</div>

<table id="main-table" class="table table-striped table-bordered table-sm">
    <thead>
        <tr>
            <th scope="col">Apply Date</th>
            <th scope="col">First Name</th>
            <th scope="col">Last Name</th>
            <th scope="col">Email</th>
            <th scope="col">Phone Number</th>
            <th scope="col">Position</th>
            <th scope="col">Status</th>
            <th scope="col"></th>
        </tr>
    </thead>
    <tbody id="table-body"></tbody>
</table>


@section Scripts {

    <script>
        var page = 1;
        $(document).ready(function () {
            loadApplications(1);
        });
        function loadApplications(page) {
            $.ajax({
                url: "api/Application/GetListViewModel",
                type: "GET",
                success: function (response) {
                    document.getElementById("table-body").innerHTML = '';
                    $.each(response, function (i, application) {
                        console.log(application);
                        let tableRow = document.createElement("tr");

                        let columns = getTableColumns(application);

                        let trButtons = document.createElement("td");
                        trButtons.classList.add("tr-buttons");

                        createEditDeleteButtons(columns, trButtons, application);

                        columns.forEach(c => tableRow.appendChild(c));
                        tableRow.appendChild(trButtons);

                        document.getElementById("table-body").appendChild(tableRow);
                    });

                },
                error: function () {
                    alert("load applications error");
                }
            });
        }
        function deleteRow(id) {
            $.ajax({
                url: "api/Application/Delete/" + id,
                type: "DELETE",
                success: function () {
                    console.log("trying to delete item with id :" + id);
                    loadApplications(0);
                },
                error: function () {
                    alert("delete error");
                }
            });
        }



        function saveApplication(application) {
            $.ajax({
                url: "api/Application/Update",
                type: "PUT",
                data: JSON.stringify(application),
                success: function () {
                    console.log("updated!");
                },
                error: function () {
                    alert("update error");
                },
                contentType: 'application/json'
            })            
        }

        function createEditDeleteButtons(columns, trButtons, application) {

            columns.forEach(c => c.contentEditable = false);
            removeAllChilds(trButtons);

            let deleteButton = document.createElement("button");
            deleteButton.textContent = 'Delete';
            deleteButton.classList.add("btn", "btn-danger");
            deleteButton.addEventListener("click", () => deleteRow(application.id));

            let editButton = document.createElement("button");
            editButton.textContent = 'Edit';
            editButton.classList.add("btn", "btn-info");
            editButton.addEventListener("click", () => createSaveButton(columns, trButtons, application));

            trButtons.appendChild(editButton);
            trButtons.appendChild(deleteButton);
        }

        function createSaveButton(columns, trButtons, application) {
            columns[1].contentEditable = true;
            columns[2].contentEditable = true;
            columns[3].contentEditable = true;
            columns[4].contentEditable = true;

            removeAllChilds(trButtons);

            let saveButton = document.createElement("button");
            saveButton.textContent = 'Save';
            saveButton.classList.add("btn", "btn-success");
            saveButton.addEventListener("click", function () {
                application.firstName = columns[1].textContent;
                application.lastName = columns[2].textContent;
                application.email = columns[3].textContent;
                application.phoneNumber = columns[4].textContent;
                saveApplication(application);
                createEditDeleteButtons(columns, trButtons, application);
            });

            trButtons.appendChild(saveButton);
        }

        function getTableColumns(application) {
            let trFirstName = document.createElement("td");
            trFirstName.textContent = application.firstName;
            let trLastName = document.createElement("td");
            trLastName.textContent = application.lastName;
            let trPosition = document.createElement("td");
            trPosition.textContent = application.position;
            let trDate = document.createElement("td");
            let date = new Date(application.applyDate);
            trDate.textContent = date.getDate() + "." + (date.getMonth() + 1) + "." + date.getFullYear();
            let trStatus = document.createElement("td");
            trStatus.textContent = application.applicationStatus;
            let trEmail = document.createElement("td");
            trEmail.textContent = application.email;
            let trPhoneNumber = document.createElement("td");
            trPhoneNumber.textContent = application.phoneNumber;

            return [trDate, trFirstName, trLastName, trEmail, trPhoneNumber, trPosition, trStatus];
        }

        function removeAllChilds(node) {
            while (node.firstChild)
                node.removeChild(node.firstChild);
        }
    </script>
}

    <style>

    .btn-danger {
        padding: 5px;
        font-size: 11px;
    }

    .btn-info {
        padding: 5px;
        margin-right: 5px;
        padding-right: 10px;
        padding-left: 10px;
        font-size: 11px;
    }

    .btn-success {
        padding: 5px;
        font-size: 11px;
        padding-right: 10px;
        padding-left: 10px;
    }

    .tr-buttons {
        width: 15%;
    }

    .add-button {
        font-size: 15px;
        font-weight: bold;
        border-radius: 10px;
    }

    #header-div {
        width: 50%;
        padding-top: 10px;
        height: 100px;
        float:left;
    }

    #button-div {
        padding-top: 40px;
        padding-right: 20px;
        text-align: right;
        height: 100px;
        float:left;
        width: 50%;
    }

   </style>